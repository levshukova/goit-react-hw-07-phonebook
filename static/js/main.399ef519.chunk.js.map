{"version":3,"sources":["components/Filter/Filter.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","a","get","data","addContact","name","number","contact","post","deleteContact","id","delete","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","text","includes","getFiteredContacts","ContactForm","useState","setName","setNumber","useDispatch","useSelector","onSubmit","e","preventDefault","map","alert","operations","className","s","form","formLabel","type","value","formInput","placeholder","onChange","target","button","ContactList","useEffect","list","listItem","onClick","onDeleteContact","Filter","label","actions","input","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.399ef519.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\nexport default contactsOperations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const getFiteredContacts = contacts => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(text =>\n        text.name.toLowerCase().includes(normalizedFilter),\n      );\n    };\n\n    return getFiteredContacts(contacts);\n  },\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport operations from '../../redux/operations';\nimport { getContacts } from '../../redux/selectors';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name || !number) return;\n\n    const contactNames = contacts.map(contact => contact.name.toLowerCase());\n    if (contactNames.includes(name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(operations.addContact(name, number));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.formLabel}>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          className={s.formInput}\n          placeholder=\" \"\n          onChange={handleNameChange}\n        />\n      </label>\n      <label className={s.formLabel}>\n        Number\n        <input\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          className={s.formInput}\n          placeholder=\" \"\n          onChange={handleNumberChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/selectors';\nimport operations from '../../redux/operations';\n\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  const onDeleteContact = id => dispatch(operations.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.listItem}>\n            <span className={s.name}>{name}:</span>\n            <span className={s.number}>{number}</span>\n            <button className={s.button} onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\n\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n        className={s.input}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n  fetchContactsSuccess,\n} from './actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport contactsReducer from './reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"name\":\"ContactList_name__2WLgA\",\"number\":\"ContactList_number__14V4G\",\"listItem\":\"ContactList_listItem__29Cbr\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}